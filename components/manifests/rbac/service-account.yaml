---
# ServiceAccount for backend service
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambient-backend
  namespace: ambient-system
---
# ClusterRoleBinding for backend service
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ambient-backend
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambient-backend-cluster-role
subjects:
  - kind: ServiceAccount
    name: ambient-backend
    namespace: ambient-system
---
# ClusterRole for backend service operations
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ambient-backend-cluster-role
rules:
  # CRD management
  - apiGroups: ["vteam.ambient-code"]
    resources: ["projectsettings", "rfeworkflows", "agenticsessions"]
    verbs: ["*"]

  # Project (namespace) management
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "create", "update", "patch"]

  # OpenShift project management
  - apiGroups: ["project.openshift.io"]
    resources: ["projects"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]

  # RBAC operations for project setup
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings", "clusterrolebindings"]
    verbs: ["create", "update", "patch", "delete", "get", "list"]

  # Secret management across namespaces
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["*"]

  # SubjectAccessReview for RBAC checks
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews", "selfsubjectaccessreviews"]
    verbs: ["create"]

  # Job and Pod management for runners
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["*"]

  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "delete"]

  # PVC management for runner workspaces
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["create", "get", "list", "delete"]