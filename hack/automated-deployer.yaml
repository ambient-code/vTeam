---
# ServiceAccount for deployments in ambient-code namespace
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployer
  namespace: ambient-code
---
# Secret to generate a long-lived token for the service account
apiVersion: v1
kind: Secret
metadata:
  name: deployer-token
  namespace: ambient-code
  annotations:
    kubernetes.io/service-account.name: deployer
type: kubernetes.io/service-account-token
---
<<<<<<< HEAD
# ClusterRole with minimal deployment permissions based on components/manifests
=======
# ClusterRole with common deployment permissions
>>>>>>> c5a1b2c (git upgrade (#139))
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ambient-code-deployer-role
rules:
  # Core resources
  - apiGroups: [""]
    resources:
<<<<<<< HEAD
      - namespaces
      - services
      - serviceaccounts
      - secrets
      - configmaps
      - persistentvolumeclaims
      - pods
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Apps
  - apiGroups: ["apps"]
    resources:
      - deployments
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # RBAC
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - clusterroles
      - clusterrolebindings
      - rolebindings
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Custom Resource Definitions
  - apiGroups: ["apiextensions.k8s.io"]
    resources:
      - customresourcedefinitions
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # OpenShift Routes
  - apiGroups: ["route.openshift.io"]
    resources:
      - routes
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# ClusterRoleBinding to bind the ClusterRole to the service account for cluster-scoped resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ambient-code-deployer-binding
=======
      - pods
      - pods/log
      - pods/status
      - services
      - endpoints
      - configmaps
      - secrets
      - serviceaccounts
      - persistentvolumeclaims
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["batch"]
    resources:
      - jobs
      - cronjobs
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
      - networkpolicies
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - roles
      - rolebindings
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["autoscaling"]
    resources:
      - horizontalpodautoscalers
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["policy"]
    resources:
      - poddisruptionbudgets
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# RoleBinding to bind the ClusterRole to the service account in ambient-code namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ambient-code-deployer-binding
  namespace: ambient-code
>>>>>>> c5a1b2c (git upgrade (#139))
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambient-code-deployer-role
subjects:
  - kind: ServiceAccount
    name: deployer
    namespace: ambient-code
